window.pageTranslations={ar:{pageTitle:"رفع وإدخال القوائم — المحلل المالي",pageHeader:"رفع وإدخال القوائم المالية",pageSubheader:"هذه الصفحة مخصصة لغير المتخصصين لرفع القوائم المالية الجاهزة أو إدخالها بسهولة.",actionsTitle:"أدوات التحكم",save:"تأكيد الحفظ",clear:"مسح الكل",saveForComparison:"حفظ نسخة للمقارنات",saveAsPlaceholder:"مثال: بيانات 2025",saveAs:"حفظ باسم",uploadTitle:"رفع ملف جاهز",uploadLabel:"يمكنك رفع ملف Excel أو CSV يحتوي على أي من القوائم المالية.",entryTitle:"إدخال البيانات اليدوي",tabBS:"الميزانية العمومية",tabIS:"قائمة الدخل",addBS:"إضافة بند للميزانية",addIS:"إضافة بند للدخل",confirmClear:"هل أنت متأكد من مسح جميع البيانات في كل الجداول؟",savedSuccess:"تم تأكيد الحفظ! (ملاحظة: يتم حفظ بياناتك تلقائياً عند كل تغيير)",noDataToSave:"لا توجد بيانات لحفظها.",saveAsSuccess:"تم حفظ البيانات بنجاح باسم",saveAsError:"الرجاء إدخال اسم لحفظ مجموعة البيانات.",savePrevious:"حفظ كفترة سابقة",savedPreviousSuccess:"تم حفظ بيانات الفترة السابقة بنجاح!",manualEntryTab:"إدخال يدوي",uploadFileTab:"رفع ملف",uploadFileTitle:"رفع ملف القوائم المالية (Excel أو CSV)",uploadFileSubtitle:"يجب أن يحتوي الملف على عمود لـ 'البند' وعمود لـ 'القيمة'.",uploadDragDrop:"اسحب وأفلت ملفك هنا، أو اضغط للاختيار",uploadSupportedFiles:"الملفات المدعومة: .xlsx, .xls, .csv",uploadBrowseButton:"تصفح الملفات",uploadFileReady:"الملف جاهز للمعالجة",loadingPreview:"جاري تحميل المعاينة...",dataPreview:"معاينة أول 5 صفوف:",columnMappingTitle:"مطابقة الأعمدة",columnMappingSubtitle:"الرجاء مطابقة الأعمدة من ملفك مع الحقول المطلوبة.",processFileButton:"معالجة الملف وملء الجداول",confirmClearUpload:"سيقوم هذا بمسح البيانات في الجدول الذي ستختاره. هل تريد المتابعة؟",fileReadError:"حدث خطأ أثناء قراءة الملف. الرجاء التأكد من أنه ملف Excel أو CSV صالح.",fileProcessingSuccess:"تمت معالجة الملف بنجاح! تم ملء الجدول المحدد بالبيانات.",fieldAccount:"الحساب/البند",fieldValue:"القيمة",mapToStatement:"هذه البيانات تخص أي قائمة؟"},en:{pageTitle:"Upload & Enter Statements — Financial Analyzer",pageHeader:"Upload & Enter Financial Statements",pageSubheader:"This page is for non-specialists to easily upload ready-made financial statements or enter them manually.",actionsTitle:"Controls",save:"Confirm Save",clear:"Clear All",saveForComparison:"Save a copy for comparisons",saveAsPlaceholder:"e.g., Data 2025",saveAs:"Save As",uploadTitle:"Upload a File",uploadLabel:"You can upload an Excel or CSV file containing any of the financial statements.",entryTitle:"Manual Data Entry",tabBS:"Balance Sheet",tabIS:"Income Statement",addBS:"Add Balance Sheet Item",addIS:"Add Income Item",confirmClear:"Are you sure you want to clear all data in all tables?",savedSuccess:"Save Confirmed! (Note: Your data auto-saves on every change)",noDataToSave:"No data to save.",saveAsSuccess:"Data saved successfully as",saveAsError:"Please enter a name to save the dataset.",savePrevious:"Save as Previous Period",savedPreviousSuccess:"Previous period data saved successfully!",manualEntryTab:"Manual Entry",uploadFileTab:"Upload File",uploadFileTitle:"Upload Financial Statements (Excel or CSV)",uploadFileSubtitle:"The file should have a column for 'Item' and a column for 'Value'.",uploadDragDrop:"Drag & drop your file here, or click to browse",uploadSupportedFiles:"Supported files: .xlsx, .xls, .csv",uploadBrowseButton:"Browse Files",uploadFileReady:"File is ready to be processed",loadingPreview:"Loading preview...",dataPreview:"Preview of first 5 rows:",columnMappingTitle:"Column Mapping",columnMappingSubtitle:"Please match the columns from your file to the required fields.",processFileButton:"Process File and Populate Tables",confirmClearUpload:"This will clear the data in the selected table. Do you want to continue?",fileReadError:"An error occurred reading the file. Please ensure it's a valid Excel or CSV file.",fileProcessingSuccess:"File processed successfully! The selected table has been populated.",fieldAccount:"Account/Item",fieldValue:"Value",mapToStatement:"Which statement does this data belong to?"}},document.addEventListener("DOMContentLoaded",(()=>{const e={data:{bs:[],is:[]},fileData:[],fileHeaders:[]},a=localStorage.getItem("lang")||"ar",t=e=>window.pageTranslations[a]?.[e]||e,l=e=>window.pageTranslations[a]?.[`field${e}`]||e,r={saveAsNameInput:document.getElementById("saveAsName"),saveAsBtn:document.getElementById("saveAsBtn"),saveBtn:document.getElementById("saveBtn"),clearBtn:document.getElementById("clearBtn"),savePreviousBtn:document.getElementById("savePreviousBtn"),tabContent:document.querySelector(".tab-content"),fileDropArea:document.getElementById("fileDropArea"),fileUploader:document.getElementById("fileUploader"),browseButton:document.getElementById("browseButton"),fileNameDisplay:document.getElementById("fileNameDisplay"),filePreviewArea:document.getElementById("filePreviewArea"),previewSpinner:document.getElementById("previewSpinner"),filePreviewTable:document.getElementById("filePreviewTable"),columnMapper:document.getElementById("columnMapper"),processFileBtn:document.getElementById("processFileBtn"),manualTab:document.getElementById("manual-tab")},o={tables:{bs:{headers:{ar:["الحساب","القيمة","إجراء"],en:["Account","Value","Action"]},fields:["Account","Value"]},is:{headers:{ar:["البند","القيمة","إجراء"],en:["Item","Value","Action"]},fields:["Account","Value"]}},requiredFields:["Account","Value"]},n=e=>parseFloat(String(e||"").replace(/,/g,""))||0,s=()=>{localStorage.setItem("uploadedFinancialData",JSON.stringify(e.data)),console.log("Auto-save successful!")},i=()=>{const a=JSON.parse(localStorage.getItem("uploadedFinancialData")||"{}");for(const l in o.tables)e.data[l]=a[l]?.length>0?a[l]:[(t=o.tables[l].fields,t.reduce(((e,a)=>({...e,[a]:""})),{}))];var t},d=()=>{const a=r.saveAsNameInput.value.trim();if(!a)return void alert(t("saveAsError"));const l=[];if(e.data.bs.forEach((e=>{l.push({Account:e.Account,Debit:n(e.Value),Credit:0,MainType:"Assets",SubType:"Current Asset"})})),e.data.is.forEach((e=>{l.push({Account:e.Account,Debit:n(e.Value),Credit:0,MainType:"Income Statement",SubType:"Revenue"})})),0!==l.length)try{localStorage.setItem(`FA_DATASET_${a}`,JSON.stringify(l)),alert(`${t("saveAsSuccess")} "${a}"!`),r.saveAsNameInput.value=""}catch(e){alert("Error saving data.")}else alert(t("noDataToSave"))},c=()=>{if(0!==e.data.bs.length||0!==e.data.is.length)try{localStorage.setItem("uploadedFinancialDataPrevious",JSON.stringify(e.data)),alert(t("savedPreviousSuccess"))}catch(e){alert("Error saving previous period data.")}else alert(t("noDataToSave"))},u=t=>{const l=document.getElementById(`${t}Table`),r=o.tables[t],i=e.data[t],d=r.headers[a];l.innerHTML=`<thead><tr>${d.map((e=>`<th>${e}</th>`)).join("")}</tr></thead><tbody></tbody>`;const c=l.querySelector("tbody");i.forEach(((e,a)=>{const l=document.createElement("tr");let o="";r.fields.forEach((a=>{const t=e[a]||"";o+=`<td><input class="form-control form-control-sm" type="${"Value"===a?"number":"text"}" data-field="${a}" value="${t}"></td>`})),o+='<td><button class="btn btn-sm btn-outline-danger btn-delete"><i class="bi bi-trash"></i></button></td>',l.innerHTML=o,l.querySelectorAll("input").forEach((e=>{e.addEventListener("input",(e=>{i[a][e.target.dataset.field]="number"===e.target.type?n(e.target.value):e.target.value,s()}))})),l.querySelector(".btn-delete").addEventListener("click",(()=>{i.splice(a,1),s(),u(t)})),c.appendChild(l)}))},p=()=>Object.keys(o.tables).forEach((e=>u(e))),m=()=>{let n=o.requiredFields.map((t=>{const r=l(t),o=((e,a)=>{const t=e.toLowerCase(),r=(l(e)||"").toLowerCase();for(const e of a){const a=String(e||"").toLowerCase().trim();if(a===t||a===r)return e}return"account"===t&&a.find((e=>String(e).toLowerCase().trim().includes("item")))?a.find((e=>String(e).toLowerCase().trim().includes("item"))):"account"===t&&a.find((e=>String(e).toLowerCase().trim().includes("البند")))?a.find((e=>String(e).toLowerCase().trim().includes("البند"))):"value"===t&&a.find((e=>String(e).toLowerCase().trim().includes("amount")))?a.find((e=>String(e).toLowerCase().trim().includes("amount"))):"value"===t&&a.find((e=>String(e).toLowerCase().trim().includes("القيمة")))?a.find((e=>String(e).toLowerCase().trim().includes("القيمة"))):""})(t,e.fileHeaders);return`\n            <div class="col-md-6 col-sm-12">\n                <label for="map-${t}" class="form-label fw-bold">${r}</label>\n                <select id="map-${t}" class="form-select form-select-sm" data-field-key="${t}">\n                    <option value="">-- ${"ar"===a?"تجاهل":"Ignore"} --</option>\n                    ${e.fileHeaders.map((e=>`<option value="${e}" ${e===o?"selected":""}>${e}</option>`)).join("")}\n                </select>\n            </div>`})).join("");const s=`\n        <div class="col-md-12 col-sm-12 mt-3 pt-3 border-top">\n            <label for="map-StatementType" class="form-label fw-bold">${t("mapToStatement")}</label>\n            <select id="map-StatementType" class="form-select form-select">\n                <option value="bs">${t("tabBS")}</option>\n                <option value="is">${t("tabIS")}</option>\n            </select>\n        </div>`;r.columnMapper.innerHTML=n+s},f=l=>{if(!l)return;r.fileNameDisplay.textContent=`File: ${l.name} | Size: ${(l.size/1024).toFixed(2)} KB`,r.filePreviewArea.classList.remove("d-none"),r.fileDropArea.classList.add("d-none"),r.previewSpinner.classList.remove("d-none"),r.filePreviewTable.innerHTML="",r.columnMapper.innerHTML="";const o=new FileReader;o.onload=l=>{try{const t=l.target.result,o=XLSX.read(t,{type:"array"}),n=o.SheetNames[0],s=o.Sheets[n],i=XLSX.utils.sheet_to_json(s,{header:0});if(0===i.length)throw new Error("No data found in file.");e.fileData=i,e.fileHeaders=Object.keys(i[0]),(()=>{if(0===e.fileData.length)return void(r.filePreviewTable.innerHTML=`<p class="text-danger">${"ar"===a?"الملف فارغ أو لا يمكن قراءته.":"File is empty or unreadable."}</p>`);const t=e.fileHeaders,l=e.fileData.slice(0,5);let o='<table class="table table-sm table-bordered table-striped small">';o+=`<thead class="table-light"><tr>${t.map((e=>`<th>${e}</th>`)).join("")}</tr></thead>`,o+="<tbody>",l.forEach((e=>{o+=`<tr>${t.map((a=>`<td>${e[a]||""}</td>`)).join("")}</tr>`})),o+="</tbody></table>",r.filePreviewTable.innerHTML=o})(),m(),r.previewSpinner.classList.add("d-none")}catch(e){console.error(e),alert(t("fileReadError")),v()}},o.onerror=()=>{alert(t("fileReadError")),v()},o.readAsArrayBuffer(l)},v=()=>{r.filePreviewArea.classList.add("d-none"),r.fileDropArea.classList.remove("d-none"),r.fileUploader.value="",e.fileData=[],e.fileHeaders=[]},b=()=>{if(!confirm(t("confirmClearUpload")))return;const a={};r.columnMapper.querySelectorAll("select[data-field-key]").forEach((e=>{a[e.dataset.fieldKey]=e.value}));const l=document.getElementById("map-StatementType").value;if(e.data[l]=[],e.fileData.forEach((t=>{const r={Account:t[a.Account]||"",Value:n(t[a.Value])},s={};o.tables[l].fields.forEach((e=>s[e]=r[e])),e.data[l].push(s)})),0===e.data[l].length){const a=e=>e.reduce(((e,a)=>({...e,[a]:""})),{});e.data[l]=[a(o.tables[l].fields)]}s(),p();new bootstrap.Tab(r.manualTab).show();const i=document.getElementById(`${l}-tab`);if(i){new bootstrap.Tab(i).show()}v(),alert(t("fileProcessingSuccess"))};r.saveBtn.addEventListener("click",(()=>{s(),alert(t("savedSuccess"))})),r.clearBtn.addEventListener("click",(()=>{confirm(t("confirmClear"))&&(localStorage.removeItem("uploadedFinancialData"),i(),s(),p())})),r.saveAsBtn.addEventListener("click",d),r.savePreviousBtn.addEventListener("click",c),r.tabContent.addEventListener("click",(a=>{const t=a.target.closest("[data-table]");if(t){const a=t.dataset.table,l=o.tables[a].fields.reduce(((e,a)=>({...e,[a]:""})),{});e.data[a].push(l),s(),u(a)}})),i(),p(),r.browseButton&&(r.browseButton.addEventListener("click",(()=>r.fileUploader.click())),r.fileDropArea.addEventListener("click",(()=>r.fileUploader.click())),r.processFileBtn.addEventListener("click",b),r.fileUploader.addEventListener("change",(e=>{e.target.files.length>0&&f(e.target.files[0])})),["dragenter","dragover","dragleave","drop"].forEach((e=>{r.fileDropArea.addEventListener(e,(e=>{e.preventDefault(),e.stopPropagation()}),!1)})),["dragenter","dragover"].forEach((e=>{r.fileDropArea.addEventListener(e,(()=>r.fileDropArea.classList.add("border-success")),!1)})),["dragleave","drop"].forEach((e=>{r.fileDropArea.addEventListener(e,(()=>r.fileDropArea.classList.remove("border-success")),!1)})),r.fileDropArea.addEventListener("drop",(e=>{const a=e.dataTransfer.files;a.length>0&&(r.fileUploader.files=a,f(a[0]))}),!1))}));
