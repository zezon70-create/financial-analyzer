window.pageTranslations={ar:{pageTitle:"التقارير المالية المفصلة — المحلل المالي",pageHeader:"القوائم المالية المفصلة",pageSubheader:"تقارير احترافية طبقًا للمعايير الدولية مع تعليقات تحليلية ذكية.",commentaryTitle:"تعليق تحليلي",exportPdf:"تصدير PDF",exportExcel:"تصدير Excel",total:"الإجمالي",noDataMessage:"لا توجد بيانات مالية لعرضها من المصدر المحدد. يرجى إدخال البيانات أولاً أو تغيير المصدر.",noPreviousDataMessage:"لم يتم العثور على بيانات فترة سابقة. سيتم عرض بيانات الفترة الحالية فقط.",dataSourceTitle:"مصدر البيانات:",sourceTrialBalanceLabel:"استخدام ميزان المراجعة (من صفحة الإدخال)",sourceUploadedLabel:"استخدام القوائم المالية المرفوعة (من صفحة الرفع)",thAccount:"الحساب",thCurrentPeriod:"الفترة الحالية",thPreviousPeriod:"الفترة السابقة",thChangeAbs:"التغير ($)",thChangePct:"التغير (%)",bsTitle:"قائمة المركز المالي",bsSubheader:"تعرض أصول الشركة وخصومها وحقوق ملكيتها في تاريخ محدد.",assets:"الأصول",currentAssets:"الأصول المتداولة",cashAndEquivalents:"النقد وما في حكمه",accountsReceivable:"العملاء (المدينون)",inventory:"المخزون",otherCurrentAssets:"أصول متداولة أخرى",totalCurrentAssets:"إجمالي الأصول المتداولة",nonCurrentAssets:"الأصول غير المتداولة",propertyPlantEquipment:"العقارات والآلات والمعدات (صافي)",otherNonCurrentAssets:"أصول غير متداولة أخرى",totalNonCurrentAssets:"إجمالي الأصول غير المتداولة",totalAssets:"إجمالي الأصول",liabilities:"الخصوم",currentLiabilities:"الخصوم المتداولة",accountsPayable:"الموردون (الدائنون)",shortTermLoans:"قروض قصيرة الأجل",otherCurrentLiabilities:"خصوم متداولة أخرى",totalCurrentLiabilities:"إجمالي الخصوم المتداولة",nonCurrentLiabilities:"الخصوم غير المتداولة",longTermLoans:"قروض طويلة الأجل",otherNonCurrentLiabilities:"خصوم غير متداولة أخرى",totalNonCurrentLiabilities:"إجمالي الخصوم غير المتداولة",totalLiabilities:"إجمالي الخصوم",equity:"حقوق الملكية",paidInCapital:"رأس المال المدفوع",retainedEarnings:"الأرباح المحتجزة / (الخسائر المرحلة)",netProfitForPeriod:"صافي ربح / (خسارة) الفترة",totalEquity:"إجمالي حقوق الملكية",totalLiabilitiesAndEquity:"إجمالي الخصوم وحقوق الملكية",bs_comment_balanced:"تحليل إيجابي: قائمة المركز المالي متوازنة للفترة الحالية.",bs_comment_unbalanced:"تحليل يتطلب الانتباه: القائمة غير متوازنة بفارق {diff} للفترة الحالية.",bs_comment_growth:"مؤشر نمو: إجمالي الأصول زاد بنسبة {pct} عن الفترة السابقة.",bs_comment_decline:"مؤشر انكماش: إجمالي الأصول انخفض بنسبة {pct} عن الفترة السابقة.",isTitle:"قائمة الدخل الشامل",isSubheader:"تلخص إيرادات ومصروفات الشركة خلال فترة زمنية محددة.",revenue:"الإيرادات / المبيعات",cogs:"تكلفة الإيرادات / المبيعات",grossProfit:"مجمل الربح / (الخسارة)",operatingExpenses:"المصروفات التشغيلية",generalAdminExpenses:"مصروفات عمومية وإدارية",sellingMarketingExpenses:"مصروفات بيع وتسويق",depreciationAmortization:"إهلاك واستهلاك",otherOperatingExpenses:"مصروفات تشغيلية أخرى",operatingProfit:"الربح / (الخسارة) التشغيلي (EBIT)",interestExpense:"مصروف الفائدة",profitBeforeTax:"الربح / (الخسارة) قبل الضريبة (PBT)",taxExpense:"مصروف الضريبة",netProfit:"صافي الربح / (الخسارة) للفترة",is_comment_profit:"أداء قوي: الشركة تحقق صافي ربح قدره {profit} بهامش ربح يبلغ {margin}%.",is_comment_loss:"تحديات في الربحية: الشركة تسجل صافي خسارة بقيمة {profit}.",is_comment_revenue_growth:"نمو في الإيرادات: الإيرادات زادت بنسبة {pct} عن الفترة السابقة.",is_comment_profit_improvement:"تحسن في الربحية: صافي الربح زاد بشكل ملحوظ عن الفترة السابقة.",cfTitle:"قائمة التدفقات النقدية (الطريقة غير المباشرة - تقديرية)",cfSubheader:"توضح حركة النقد المقدرة من الأنشطة المختلفة.",operatingActivities:"التدفقات النقدية من الأنشطة التشغيلية",netIncomeForCF:"صافي الدخل",adjustments:"تسويات لبنود غير نقدية:",depreciationAmortizationForCF:"إهلاك واستهلاك",changesInWorkingCapital:"التغيرات في رأس المال العامل (تقديري)",cashFlowFromOperations:"صافي النقد الناتج من الأنشطة التشغيلية",investingActivities:"التدفقات النقدية من الأنشطة الاستثمارية",capitalExpenditures:"النفقات الرأسمالية (تقديري)",cashFlowFromInvesting:"صافي النقد المستخدم في الأنشطة الاستثمارية",financingActivities:"التدفقات النقدية من الأنشطة التمويلية",cashFlowFromFinancing:"صافي النقد من (المستخدم في) الأنشطة التمويلية",netCashFlow:"صافي التغير في النقد وما في حكمه",beginningCash:"النقد وما في حكمه أول الفترة",endingCash:"النقد وما في حكمه آخر الفترة",cf_comment_positive:"وضع نقدي جيد: تشير التقديرات إلى توليد تدفقات نقدية تشغيلية موجبة.",cf_comment_negative:"مؤشر خطر: تشير التقديرات إلى تدفق نقدي تشغيلي سالب.",cf_comment_wc_source:"رأس المال العامل كان مصدراً للنقد (مثال: تحصيل سريع للعملاء).",cf_comment_wc_use:"رأس المال العامل كان استخداماً للنقد (مثال: زيادة المخزون أو بطء التحصيل).",eqTitle:"قائمة التغيرات في حقوق الملكية",eqSubheader:"توضح التغيرات التي طرأت على حقوق الملكية خلال الفترة.",openingBalanceCapital:"رأس المال أول الفترة",openingBalanceRetainedEarnings:"أرباح محتجزة أول الفترة",totalOpeningEquity:"إجمالي حقوق الملكية أول الفترة",netProfitForEquity:"صافي ربح / (خسارة) الفترة",dividends:"توزيعات أرباح (تقديري/إن وجدت)",closingBalanceCapital:"رأس المال آخر الفترة",closingBalanceRetainedEarnings:"أرباح محتجزة آخر الفترة",totalClosingEquity:"إجمالي حقوق الملكية آخر الفترة",eq_comment_growth:"نمو في حقوق المساهمين: حقوق الملكية زادت خلال الفترة.",eq_comment_decline:"انخفاض في حقوق المساهمين: حقوق الملكية انخفضت."},en:{pageTitle:"Detailed Financial Statements — Financial Analyzer",pageHeader:"Detailed Financial Statements",pageSubheader:"Professional IFRS-compliant reports with smart analytical commentary.",commentaryTitle:"Analytical Commentary",exportPdf:"Export PDF",exportExcel:"Export Excel",total:"Total",noDataMessage:"No financial data available for the selected source. Please enter data first or change the source.",noPreviousDataMessage:"Previous period data not found. Only current period data will be displayed.",dataSourceTitle:"Data Source:",sourceTrialBalanceLabel:"Use Trial Balance (from Input page)",sourceUploadedLabel:"Use Uploaded Statements (from Upload page)",thAccount:"Account",thCurrentPeriod:"Current Period",thPreviousPeriod:"Previous Period",thChangeAbs:"Change ($)",thChangePct:"Change (%)",bsTitle:"Statement of Financial Position",bsSubheader:"Shows assets, liabilities, and equity.",assets:"Assets",currentAssets:"Current Assets",cashAndEquivalents:"Cash & Equivalents",accountsReceivable:"Accounts Receivable",inventory:"Inventory",otherCurrentAssets:"Other Current Assets",totalCurrentAssets:"Total Current Assets",nonCurrentAssets:"Non-current Assets",propertyPlantEquipment:"Property, Plant & Equipment (Net)",otherNonCurrentAssets:"Other Non-current Assets",totalNonCurrentAssets:"Total Non-current Assets",totalAssets:"Total Assets",liabilities:"Liabilities",currentLiabilities:"Current Liabilities",accountsPayable:"Accounts Payable",shortTermLoans:"Short-term Loans",otherCurrentLiabilities:"Other Current Liabilities",totalCurrentLiabilities:"Total Current Liabilities",nonCurrentLiabilities:"Non-current Liabilities",longTermLoans:"Long-term Loans",otherNonCurrentLiabilities:"Other Non-current Liabilities",totalNonCurrentLiabilities:"Total Non-current Liabilities",totalLiabilities:"Total Liabilities",equity:"Equity",paidInCapital:"Paid-in Capital",retainedEarnings:"Retained Earnings / (Accumulated Deficit)",netProfitForPeriod:"Net Profit / (Loss) for the Period",totalEquity:"Total Equity",totalLiabilitiesAndEquity:"Total Liabilities and Equity",bs_comment_balanced:"Positive Analysis: Balanced statement.",bs_comment_unbalanced:"Action Required: Unbalanced by {diff}.",bs_comment_growth:"Growth Indicator: Total assets increased by {pct} from the prior period.",bs_comment_decline:"Contraction Indicator: Total assets decreased by {pct} from the prior period.",isTitle:"Statement of Comprehensive Income",isSubheader:"Summarizes revenues and expenses.",revenue:"Revenue / Sales",cogs:"Cost of Revenue / Sales",grossProfit:"Gross Profit / (Loss)",operatingExpenses:"Operating Expenses",generalAdminExpenses:"General & Administrative",sellingMarketingExpenses:"Selling & Marketing",depreciationAmortization:"Depreciation & Amortization",otherOperatingExpenses:"Other Operating Expenses",operatingProfit:"Operating Profit / (Loss) (EBIT)",interestExpense:"Interest Expense",profitBeforeTax:"Profit / (Loss) Before Tax (PBT)",taxExpense:"Tax Expense",netProfit:"Net Profit / (Loss) for the Period",is_comment_profit:"Strong Performance: Net profit of {profit}, margin {margin}%.",is_comment_loss:"Profitability Challenges: Net loss of {profit}.",is_comment_revenue_growth:"Revenue Growth: Revenue increased by {pct} from the prior period.",is_comment_profit_improvement:"Profitability Improvement: Net profit significantly increased from the prior period.",cfTitle:"Statement of Cash Flows (Indirect - Est.)",cfSubheader:"Shows estimated cash movement.",operatingActivities:"Cash Flows from Operating Activities",netIncomeForCF:"Net Income",adjustments:"Adjustments for non-cash items:",depreciationAmortizationForCF:"Depreciation & Amortization",changesInWorkingCapital:"Changes in Working Capital (Est.)",cashFlowFromOperations:"Net Cash from Operating Activities",investingActivities:"Cash Flows from Investing Activities",capitalExpenditures:"Capital Expenditures (Est.)",cashFlowFromInvesting:"Net Cash used in Investing Activities",financingActivities:"Cash Flows from Financing Activities",cashFlowFromFinancing:"Net Cash from (used in) Financing Activities",netCashFlow:"Net Change in Cash & Equivalents",beginningCash:"Beginning Cash & Equivalents",endingCash:"Ending Cash & Equivalents",cf_comment_positive:"Good Cash Position: Estimates indicate positive operating cash flow.",cf_comment_negative:"Risk Indicator: Estimates indicate negative operating cash flow.",cf_comment_wc_source:"Working capital was a source of cash (e.g., fast collections).",cf_comment_wc_use:"Working capital was a use of cash (e.g., inventory build-up).",eqTitle:"Statement of Changes in Equity",eqSubheader:"Shows changes in equity.",openingBalanceCapital:"Opening Capital Balance",openingBalanceRetainedEarnings:"Opening Retained Earnings",totalOpeningEquity:"Total Opening Equity",netProfitForEquity:"Net Profit / (Loss) for the Period",dividends:"Dividends (Est./If any)",closingBalanceCapital:"Closing Capital Balance",closingBalanceRetainedEarnings:"Closing Retained Earnings",totalClosingEquity:"Total Closing Equity",eq_comment_growth:"Shareholder Value Growth: Equity increased.",eq_comment_decline:"Shareholder Value Decline: Equity decreased."}},document.addEventListener("DOMContentLoaded",(()=>{console.log("[DEBUG] report-app.js script started execution.");const t={trialDataCurrent:null,trialDataPrevious:null,uploadedDataCurrent:null,uploadedDataPrevious:null,statementsCurrent:null,statementsPrevious:null,hasDataCurrent:!1,hasDataPrevious:!1},e=localStorage.getItem("lang")||"ar",s=t=>window.pageTranslations[e]?.[t]||`[${t}]`,n=(t,e=0)=>{if(!isFinite(t))return"N/A";const s=parseFloat(t.toFixed(e));return Math.abs(s)<Math.pow(10,-e)&&s<0?(0).toLocaleString("en-US",{minimumFractionDigits:e,maximumFractionDigits:e}):s.toLocaleString("en-US",{minimumFractionDigits:e,maximumFractionDigits:e})},a=(t,e)=>{if("number"!=typeof t||"number"!=typeof e)return"N/A";if(0===e)return t>0?"New":0===t?"0.0%":"N/A";const s=(t-e)/Math.abs(e);return(s>0?"+":"")+(100*s).toFixed(1)+"%"},i=t=>{try{if(console.log("Processing uploaded data (Placeholder Logic)..."),!t||!t.balanceSheet&&!t.incomeStatement)return console.warn("Uploaded data is empty or invalid format."),null;const e=t.balanceSheet||{},s=t.incomeStatement||{},n={bs:{currentAssets:[],nonCurrentAssets:[],currentLiabilities:[],nonCurrentLiabilities:[],equityCapital:[],equityRetainedEarnings:0},is:{revenue:[],cogs:[],genAdminExpenses:[],sellingMarketingExpenses:[],depreciationAmortization:[],otherOperatingExpenses:[],interestExpense:[],taxExpense:[]},totals:{}},a=n.totals;n.bs.currentAssets=e.currentAssets||[],n.bs.nonCurrentAssets=e.nonCurrentAssets||[],n.bs.currentLiabilities=e.currentLiabilities||[],n.bs.nonCurrentLiabilities=e.nonCurrentLiabilities||[],n.bs.equityCapital=e.equity?.filter((t=>t.account.toLowerCase().includes("capital")||t.account.includes("رأس المال")))||[];const i=e.equity?.find((t=>t.account.toLowerCase().includes("retained")||t.account.includes("أرباح")));n.bs.equityRetainedEarnings=i?i.value:0,n.is.revenue=s.revenue||[],n.is.cogs=s.cogs||[],n.is.genAdminExpenses=s.expenses?.filter((t=>"genAdmin"===t.type))||[],n.is.sellingMarketingExpenses=s.expenses?.filter((t=>"sellingMarketing"===t.type))||[],n.is.depreciationAmortization=s.expenses?.filter((t=>"depreciation"===t.type))||[],n.is.interestExpense=s.expenses?.filter((t=>"interest"===t.type))||[],n.is.taxExpense=s.expenses?.filter((t=>"tax"===t.type))||[],n.is.otherOperatingExpenses=s.expenses?.filter((t=>!t.type||!["genAdmin","sellingMarketing","depreciation","interest","tax"].includes(t.type)))||[];const o=t=>t.reduce(((t,e)=>t+(e.value||0)),0);a.totalCurrentAssets=o(n.bs.currentAssets),a.totalNonCurrentAssets=o(n.bs.nonCurrentAssets),a.totalAssets=a.totalCurrentAssets+a.totalNonCurrentAssets,a.totalCurrentLiabilities=o(n.bs.currentLiabilities),a.totalNonCurrentLiabilities=o(n.bs.nonCurrentLiabilities),a.totalLiabilities=a.totalCurrentLiabilities+a.totalNonCurrentLiabilities,a.totalRevenue=o(n.is.revenue),a.totalCogs=o(n.is.cogs),a.grossProfit=a.totalRevenue-a.totalCogs,a.depreciationTotal=o(n.is.depreciationAmortization),a.totalOperatingExpenses=o(n.is.genAdminExpenses)+o(n.is.sellingMarketingExpenses)+a.depreciationTotal+o(n.is.otherOperatingExpenses),a.operatingProfit=a.grossProfit-a.totalOperatingExpenses,a.totalInterest=o(n.is.interestExpense),a.profitBeforeTax=a.operatingProfit-a.totalInterest,a.totalTax=o(n.is.taxExpense),a.netProfit=a.profitBeforeTax-a.totalTax,a.totalEquityCapital=o(n.bs.equityCapital),n.bs.equityRetainedEarnings+=a.netProfit,a.totalEquity=a.totalEquityCapital+n.bs.equityRetainedEarnings,a.totalLiabilitiesAndEquity=a.totalLiabilities+a.totalEquity;const r=n.bs.currentAssets.find((t=>t.account.toLowerCase().includes("cash")||t.account.includes("نقد")||t.account.includes("bank")||t.account.includes("بنك")));return a.cashEquivalents=r?r.value:0,a.accountsReceivable=o(n.bs.currentAssets.filter((t=>t.account.toLowerCase().includes("receivable")||t.account.includes("عملاء")))),a.inventory=o(n.bs.currentAssets.filter((t=>t.account.toLowerCase().includes("inventory")||t.account.includes("مخزون")))),a.accountsPayable=o(n.bs.currentLiabilities.filter((t=>t.account.toLowerCase().includes("payable")||t.account.includes("مورد")))),a.shortTermDebt=o(n.bs.currentLiabilities.filter((t=>t.account.toLowerCase().includes("loan")||t.account.includes("قرض قصير")))),a.workingCapital=a.totalCurrentAssets-a.totalCurrentLiabilities,a.ebit=a.operatingProfit,a.purchases=a.totalCogs,a.retainedEarnings=n.bs.equityRetainedEarnings,console.log("Successfully processed uploaded data chunk."),n}catch(t){return console.error("Error processing uploaded data:",t),null}},o=t=>{const e={bs:{currentAssets:[],nonCurrentAssets:[],currentLiabilities:[],nonCurrentLiabilities:[],equityCapital:[],equityRetainedEarnings:0},is:{revenue:[],cogs:[],genAdminExpenses:[],sellingMarketingExpenses:[],depreciationAmortization:[],otherOperatingExpenses:[],interestExpense:[],taxExpense:[]},totals:{}},s=e.totals;if(Object.assign(s,{totalCurrentAssets:0,totalNonCurrentAssets:0,totalAssets:0,totalCurrentLiabilities:0,totalNonCurrentLiabilities:0,totalLiabilities:0,totalEquityCapital:0,totalEquity:0,totalLiabilitiesAndEquity:0,totalRevenue:0,totalCogs:0,grossProfit:0,totalOperatingExpenses:0,operatingProfit:0,profitBeforeTax:0,totalTax:0,netProfit:0,cashEquivalents:0,accountsReceivable:0,inventory:0,accountsPayable:0,shortTermDebt:0,purchases:0,depreciationTotal:0,totalInterest:0,ebit:0,workingCapital:0,retainedEarnings:0}),!t||0===t.length)return console.error("buildStatementsFromTrialData called but trialDataArray is empty."),null;try{return t.forEach((t=>{const n=(parseFloat(t.Debit)||0)-(parseFloat(t.Credit)||0),a=t.MainType||"",i=t.SubType||"",o=(t.Account||"").toLowerCase(),r={account:t.Account||"Unknown",value:n};a.includes("الأصول")||a.includes("Assets")?i.includes("متداول")||i.includes("Current")?(e.bs.currentAssets.push(r),s.totalCurrentAssets+=n,(o.includes("cash")||o.includes("نقد")||o.includes("bank")||o.includes("بنك"))&&(s.cashEquivalents+=n),(o.includes("receivable")||o.includes("عملاء"))&&(s.accountsReceivable+=n),(o.includes("inventory")||o.includes("مخزون"))&&(s.inventory+=n)):(e.bs.nonCurrentAssets.push(r),s.totalNonCurrentAssets+=n):a.includes("الخصوم")||a.includes("Liabilities")?(r.value=-n,i.includes("متداول")||i.includes("Current")?(e.bs.currentLiabilities.push(r),s.totalCurrentLiabilities+=r.value,(o.includes("payable")||o.includes("مورد"))&&(s.accountsPayable+=r.value),(o.includes("loan")||o.includes("قرض قصير"))&&(s.shortTermDebt+=r.value)):(e.bs.nonCurrentLiabilities.push(r),s.totalNonCurrentLiabilities+=r.value)):a.includes("حقوق الملكية")||a.includes("Equity")?(r.value=-n,i.includes("رأس المال")||i.includes("Capital")||o.includes("capital")||o.includes("رأس المال")?(e.bs.equityCapital.push(r),s.totalEquityCapital+=r.value):i.includes("الأرباح المحتجزة")||i.includes("Retained Earnings")||o.includes("retained")?e.bs.equityRetainedEarnings=r.value:(e.bs.equityCapital.push(r),s.totalEquityCapital+=r.value)):(a.includes("قائمة الدخل")||a.includes("Income Statement"))&&(i.includes("الإيرادات")||i.includes("Revenue")?(r.value=-n,e.is.revenue.push(r),s.totalRevenue+=r.value):i.includes("تكلفة المبيعات")||i.includes("COGS")?(e.is.cogs.push(r),s.totalCogs+=n):i.includes("مشتريات")||i.includes("Purchases")||o.includes("purchase")?s.purchases+=n:i.includes("إهلاك")||i.includes("Depreciation")||o.includes("depreciation")||o.includes("amortization")?(e.is.depreciationAmortization.push(r),s.depreciationTotal+=n):i.includes("فائدة")||i.includes("Interest")||o.includes("interest")?(e.is.interestExpense.push(r),s.totalInterest+=n):i.includes("ضريب")||i.includes("Tax")||o.includes("tax")?(e.is.taxExpense.push(r),s.totalTax+=n):i.includes("بيع")||i.includes("Selling")||i.includes("Marketing")||o.includes("selling")||o.includes("marketing")?e.is.sellingMarketingExpenses.push(r):i.includes("إداري")||i.includes("General")||i.includes("Admin")||o.includes("general")||o.includes("admin")?e.is.genAdminExpenses.push(r):e.is.otherOperatingExpenses.push(r))})),s.totalAssets=s.totalCurrentAssets+s.totalNonCurrentAssets,s.totalLiabilities=s.totalCurrentLiabilities+s.totalNonCurrentLiabilities,s.grossProfit=s.totalRevenue-s.totalCogs,s.totalOperatingExpenses=e.is.genAdminExpenses.reduce(((t,e)=>t+e.value),0)+e.is.sellingMarketingExpenses.reduce(((t,e)=>t+e.value),0)+(s.depreciationTotal||0)+e.is.otherOperatingExpenses.reduce(((t,e)=>t+e.value),0),s.operatingProfit=s.grossProfit-s.totalOperatingExpenses,s.profitBeforeTax=s.operatingProfit-s.totalInterest,s.netProfit=s.profitBeforeTax-s.totalTax,e.bs.equityRetainedEarnings+=s.netProfit,s.retainedEarnings=e.bs.equityRetainedEarnings,s.totalEquity=s.totalEquityCapital+e.bs.equityRetainedEarnings,s.totalLiabilitiesAndEquity=s.totalLiabilities+s.totalEquity,s.workingCapital=s.totalCurrentAssets-s.totalCurrentLiabilities,s.ebit=s.operatingProfit,0===s.purchases&&s.totalCogs>0&&(s.purchases=s.totalCogs),console.log("Processed Statements Data from Trial Balance:",e),e}catch(t){return console.error("Error during trial data processing loop:",t),null}},r=(e=[],s=[],i,o,r="",l=0)=>{let c=0,d=0,u="";Array.isArray(e)||(e=[]),Array.isArray(s)||(s=[]);const p=new Set([...e.map((t=>t.account)),...s.map((t=>t.account))]),g=new Map(s.map((t=>[t.account,t.value])));if((p.size>0||i)&&(u+=`<tr class="section-header ${r}"><td colspan="${t.hasDataPrevious?5:2}"><strong>${i||""}</strong></td></tr>`),p.forEach((s=>{const i=e.find((t=>t.account===s)),o=i?i.value:0,r=g.get(s)||0,p=o-r;u+=`<tr>\n                        <td class="ps-3">${s}</td>\n                        <td class="text-end">${n(o,l)}</td>\n                        ${t.hasDataPrevious?`\n                        <td class="text-end">${n(r,l)}</td>\n                        <td class="text-end">${n(p,l)}</td>\n                        <td class="text-end ${p>0?"text-success":p<0?"text-danger":""}">${a(o,r)}</td>\n                        `:""}\n                     </tr>`,c+=o,d+=r})),o&&p.size>0){const e=c-d,s=a(c,d);u+=`<tr class="subtotal-row ${r}">\n                        <td>${o}</td>\n                        <td class="text-end">${n(c,l)}</td>\n                        ${t.hasDataPrevious?`\n                        <td class="text-end">${n(d,l)}</td>\n                        <td class="text-end">${n(e,l)}</td>\n                        <td class="text-end ${e>0?"text-success":e<0?"text-danger":""}">${s}</td>\n                        `:""}\n                     </tr>`}return{html:u,totalCurrent:c,totalPrevious:d}},l=()=>{console.log("[DEBUG] Reloading and rendering data based on selection.");const e=document.getElementById("noDataWarning");["balanceSheetCard","incomeStatementCard","cashFlowStatementCard","equityStatementCard"].forEach((t=>{const e=document.getElementById(t);e&&(e.style.display="none")})),e&&(e.style.display="none"),(()=>{t.hasDataCurrent=!1,t.hasDataPrevious=!1,t.statementsCurrent=null,t.statementsPrevious=null;const e=document.querySelector('input[name="dataSource"]:checked')?.value||"trialData";console.log(`[DEBUG] Selected data source: ${e}`);const s=(t,s)=>{const n=localStorage.getItem(t);if(!n)return console.warn(`[DEBUG] ${t} not found in localStorage.`),null;try{const a=JSON.parse(n);if("uploadedData"===e){if(a&&(a.balanceSheet||a.incomeStatement))return console.log(`[DEBUG] Found valid ${t}, processing...`),s(a)}else if(Array.isArray(a)&&a.length>0&&(1!==a.length||a[0].Account||toNum(a[0].Debit)||toNum(a[0].Credit)))return console.log(`[DEBUG] Found valid ${t}, building statements...`),s(a);return console.warn(`[DEBUG] ${t} found but is empty or invalid.`),null}catch(e){return console.error(`Error parsing ${t}:`,e),null}};if("uploadedData"===e?(t.statementsCurrent=s("uploadedFinancialData",i),t.statementsPrevious=s("uploadedFinancialDataPrevious",i)):(t.statementsCurrent=s("trialData",o),t.statementsPrevious=s("trialDataPrevious",o)),t.hasDataCurrent=!!t.statementsCurrent,t.hasDataPrevious=!!t.statementsPrevious,t.hasDataCurrent)try{localStorage.setItem("financialDataCurrent",JSON.stringify(t.statementsCurrent)),console.log("[DEBUG] Saved processed 'financialDataCurrent' to localStorage.")}catch(t){console.error("Failed to save financialDataCurrent:",t)}else localStorage.removeItem("financialDataCurrent");if(t.hasDataPrevious)try{localStorage.setItem("financialDataPrevious",JSON.stringify(t.statementsPrevious)),console.log("[DEBUG] Saved processed 'financialDataPrevious' to localStorage.")}catch(t){console.error("Failed to save financialDataPrevious:",t)}else localStorage.removeItem("financialDataPrevious");return t.hasDataCurrent})()?(console.log("[DEBUG] Data loaded successfully. Rendering statements..."),(()=>{const e=t.statementsCurrent,i=t.statementsPrevious,o=e?.bs||{currentAssets:[],nonCurrentAssets:[],currentLiabilities:[],nonCurrentLiabilities:[],equityCapital:[]},l=e?.totals||{},c=i?.bs||{currentAssets:[],nonCurrentAssets:[],currentLiabilities:[],nonCurrentLiabilities:[],equityCapital:[]},d=i?.totals||{};let u='<table class="table table-sm report-table"><thead><tr>';u+=`<th>${s("thAccount")}</th>`,u+=`<th class="text-end">${s("thCurrentPeriod")}</th>`,t.hasDataPrevious&&(u+=`<th class="text-end">${s("thPreviousPeriod")}</th>`,u+=`<th class="text-end">${s("thChangeAbs")}</th>`,u+=`<th class="text-end">${s("thChangePct")}</th>`),u+="</tr></thead><tbody>";const p=r(o.currentAssets,c.currentAssets,s("currentAssets"),s("totalCurrentAssets"),"assets-section"),g=r(o.nonCurrentAssets,c.nonCurrentAssets,s("nonCurrentAssets"),s("totalNonCurrentAssets"),"assets-section");u+=p.html+g.html,u+=`<tr class="total-row assets-section">\n                    <td>${s("totalAssets")}</td>\n                    <td class="text-end">${n(l.totalAssets)}</td>\n                    ${t.hasDataPrevious?`\n                    <td class="text-end">${n(d.totalAssets)}</td>\n                    <td class="text-end">${n((l.totalAssets||0)-(d.totalAssets||0))}</td>\n                    <td class="text-end ${(l.totalAssets||0)-(d.totalAssets||0)>=0?"text-success":"text-danger"}">${a(l.totalAssets,d.totalAssets)}</td>\n                    `:""}\n                 </tr>`;const m=r(o.currentLiabilities,c.currentLiabilities,s("currentLiabilities"),s("totalCurrentLiabilities"),"liabilities-section"),h=r(o.nonCurrentLiabilities,c.nonCurrentLiabilities,s("nonCurrentLiabilities"),s("totalNonCurrentLiabilities"),"liabilities-section");u+=m.html+h.html,u+=`<tr class="subtotal-row liabilities-section">\n                    <td>${s("totalLiabilities")}</td>\n                    <td class="text-end">${n(l.totalLiabilities)}</td>\n                    ${t.hasDataPrevious?`\n                    <td class="text-end">${n(d.totalLiabilities)}</td>\n                    <td class="text-end">${n((l.totalLiabilities||0)-(d.totalLiabilities||0))}</td>\n                    <td class="text-end ${(l.totalLiabilities||0)-(d.totalLiabilities||0)>=0?"text-danger":"text-success"}">${a(l.totalLiabilities,d.totalLiabilities)}</td>\n                    `:""}\n                 </tr>`,u+=r(o.equityCapital,c.equityCapital,s("equity"),null,"equity-section").html;const b=o.equityRetainedEarnings||0,x=c.equityRetainedEarnings||0,f=b-x;u+=`<tr>\n                    <td class="ps-3">${s("retainedEarnings")}</td>\n                    <td class="text-end">${n(b)}</td>\n                    ${t.hasDataPrevious?`\n                    <td class="text-end">${n(x)}</td>\n                    <td class="text-end">${n(f)}</td>\n                    <td class="text-end ${f>=0?"text-success":"text-danger"}">${a(b,x)}</td>\n                    `:""}\n                 </tr>`,u+=`<tr class="subtotal-row equity-section">\n                    <td>${s("totalEquity")}</td>\n                    <td class="text-end">${n(l.totalEquity)}</td>\n                    ${t.hasDataPrevious?`\n                    <td class="text-end">${n(d.totalEquity)}</td>\n                    <td class="text-end">${n((l.totalEquity||0)-(d.totalEquity||0))}</td>\n                    <td class="text-end ${(l.totalEquity||0)-(d.totalEquity||0)>=0?"text-success":"text-danger"}">${a(l.totalEquity,d.totalEquity)}</td>\n                    `:""}\n                 </tr>`,u+=`<tr class="total-row equity-section">\n                    <td>${s("totalLiabilitiesAndEquity")}</td>\n                    <td class="text-end">${n(l.totalLiabilitiesAndEquity)}</td>\n                    ${t.hasDataPrevious?`\n                    <td class="text-end">${n(d.totalLiabilitiesAndEquity)}</td>\n                    <td class="text-end">${n((l.totalLiabilitiesAndEquity||0)-(d.totalLiabilitiesAndEquity||0))}</td>\n                    <td class="text-end ${(l.totalLiabilitiesAndEquity||0)-(d.totalLiabilitiesAndEquity||0)>=0?"text-success":"text-danger"}">${a(l.totalLiabilitiesAndEquity,d.totalLiabilitiesAndEquity)}</td>\n                    `:""}\n                 </tr>`,u+="</tbody></table>",document.getElementById("balanceSheetTable").innerHTML=u;const E=(l.totalAssets||0)-(l.totalLiabilitiesAndEquity||0);let C=Math.abs(E)<1?s("bs_comment_balanced"):s("bs_comment_unbalanced").replace("{diff}",n(E));if(t.hasDataPrevious&&0!==(d.totalAssets||0)){const t=(l.totalAssets-d.totalAssets)/Math.abs(d.totalAssets);t>0?C+=" "+s("bs_comment_growth").replace("{pct}",a(l.totalAssets,d.totalAssets)):t<0&&(C+=" "+s("bs_comment_decline").replace("{pct}",a(l.totalAssets,d.totalAssets)))}document.getElementById("balanceSheetComment").textContent=C})(),(()=>{const e=t.statementsCurrent,i=t.statementsPrevious,o=e?.is||{revenue:[],cogs:[],genAdminExpenses:[],sellingMarketingExpenses:[],depreciationAmortization:[],otherOperatingExpenses:[],interestExpense:[],taxExpense:[]},l=e?.totals||{},c=i?.is||{revenue:[],cogs:[],genAdminExpenses:[],sellingMarketingExpenses:[],depreciationAmortization:[],otherOperatingExpenses:[],interestExpense:[],taxExpense:[]},d=i?.totals||{};let u='<table class="table table-sm report-table"><thead><tr>';u+=`<th>${s("thAccount")}</th>`,u+=`<th class="text-end">${s("thCurrentPeriod")}</th>`,t.hasDataPrevious&&(u+=`<th class="text-end">${s("thPreviousPeriod")}</th>`,u+=`<th class="text-end">${s("thChangeAbs")}</th>`,u+=`<th class="text-end">${s("thChangePct")}</th>`),u+="</tr></thead><tbody>";const p=(e,s,i,o)=>{const r=(s||0)-(i||0),l=a(s,i),c=r>=0?o?"text-success":"text-danger":o?"text-danger":"text-success";return`<td class="text-end">${n(s,2)}</td>\n                    ${t.hasDataPrevious?`\n                    <td class="text-end">${n(i,2)}</td>\n                    <td class="text-end">${n(r,2)}</td>\n                    <td class="text-end ${c}">${l}</td>\n                    `:""}`};u+=r(o.revenue,c.revenue,null,s("revenue"),"profit-row",2).html,u+=r(o.cogs,c.cogs,null,`(-) ${s("cogs")}`,"expense-total",2).html,u+=`<tr class="subtotal-row profit-row"><td>${s("grossProfit")}</td>${p(0,l.grossProfit,d.grossProfit,!0)}</tr>`,u+=`<tr class="section-header"><td colspan="5"><strong>(-) ${s("operatingExpenses")}</strong></td></tr>`;const g=r(o.genAdminExpenses,c.genAdminExpenses,null,null,"",2),m=r(o.sellingMarketingExpenses,c.sellingMarketingExpenses,null,null,"",2),h=r(o.depreciationAmortization,c.depreciationAmortization,null,null,"",2),b=r(o.otherOperatingExpenses,c.otherOperatingExpenses,null,null,"",2);u+=g.html+m.html+h.html+b.html,u+=`<tr class="subtotal-row expense-total"><td>${s("total")} ${s("operatingExpenses")}</td>${p(0,l.totalOperatingExpenses,d.totalOperatingExpenses,!1)}</tr>`,u+=`<tr class="subtotal-row profit-row"><td>${s("operatingProfit")}</td>${p(0,l.operatingProfit,d.operatingProfit,!0)}</tr>`,u+=r(o.interestExpense,c.interestExpense,null,`(-) ${s("interestExpense")}`,"expense-total",2).html,u+=`<tr class="subtotal-row profit-row"><td>${s("profitBeforeTax")}</td>${p(0,l.profitBeforeTax,d.profitBeforeTax,!0)}</tr>`,u+=r(o.taxExpense,c.taxExpense,null,`(-) ${s("taxExpense")}`,"expense-total",2).html,u+=`<tr class="total-row profit-row"><td>${s("netProfit")}</td>${p(0,l.netProfit,d.netProfit,!0)}</tr>`,u+="</tbody></table>",document.getElementById("incomeStatementTable").innerHTML=u;const x=0!==(l.totalRevenue||0)?(l.netProfit||0)/l.totalRevenue*100:0;let f=(l.netProfit||0)>=0?s("is_comment_profit").replace("{profit}",n(l.netProfit,2)).replace("{margin}",x.toFixed(1)):s("is_comment_loss").replace("{profit}",n(l.netProfit,2));t.hasDataPrevious&&(l.totalRevenue>(d.totalRevenue||0)&&(f+=" "+s("is_comment_revenue_growth").replace("{pct}",a(l.totalRevenue,d.totalRevenue))),l.netProfit>(d.netProfit||0)&&(f+=" "+s("is_comment_profit_improvement"))),document.getElementById("incomeStatementComment").textContent=f})(),(()=>{const e=t.statementsCurrent?.totals||{},a=t.statementsPrevious?.totals||{},i=e.netProfit||0,o=e.depreciationTotal||0,r=(e.workingCapital||0)-(a.workingCapital||0),l=i+o-(t.hasDataPrevious?r:0),c=-o,d=l+c+0,u=a.cashEquivalents||0,p=u+d,g=e.cashEquivalents||0,m=a.netProfit||0,h=a.depreciationTotal||0,b=m+h,x=-h,f=b+x+0,E=0+f;let C='<table class="table table-sm report-table"><thead><tr>';C+=`<th>${s("thAccount")}</th>`,C+=`<th class="text-end">${s("thCurrentPeriod")}</th>`,t.hasDataPrevious&&(C+=`<th class="text-end">${s("thPreviousPeriod")}</th>`),C+="</tr></thead><tbody>",C+=`<tr class="section-header"><td colspan="${t.hasDataPrevious?3:2}"><strong>${s("operatingActivities")}</strong></td></tr>`,C+=`<tr><td>${s("netIncomeForCF")}</td><td class="text-end">${n(i)}</td>${t.hasDataPrevious?`<td class="text-end">${n(m)}</td>`:""}</tr>`,C+=`<tr><td colspan="${t.hasDataPrevious?3:2}">${s("adjustments")}</td></tr>`,C+=`<tr><td class="ps-3">${s("depreciationAmortizationForCF")}</td><td class="text-end">${n(o)}</td>${t.hasDataPrevious?`<td class="text-end">${n(h)}</td>`:""}</tr>`,C+=`<tr><td class="ps-3">${s("changesInWorkingCapital")}</td><td class="text-end">${t.hasDataPrevious?n(-r):"N/A"}</td>${t.hasDataPrevious?'<td class="text-end">N/A</td>':""}</tr>`,C+=`<tr class="subtotal-row"><td>${s("cashFlowFromOperations")}</td><td class="text-end">${n(l)}</td>${t.hasDataPrevious?`<td class="text-end">${n(b)}</td>`:""}</tr>`,C+=`<tr class="section-header"><td colspan="${t.hasDataPrevious?3:2}"><strong>${s("investingActivities")}</strong></td></tr>`,C+=`<tr><td class="ps-3">${s("capitalExpenditures")}</td><td class="text-end">${n(Math.abs(c))}</td>${t.hasDataPrevious?`<td class="text-end">${n(Math.abs(x))}</td>`:""}</tr>`,C+=`<tr class="subtotal-row"><td>${s("cashFlowFromInvesting")}</td><td class="text-end">${n(c)}</td>${t.hasDataPrevious?`<td class="text-end">${n(x)}</td>`:""}</tr>`,C+=`<tr class="section-header"><td colspan="${t.hasDataPrevious?3:2}"><strong>${s("financingActivities")}</strong></td></tr>`,C+=`<tr><td class="ps-3 text-muted"><em>(أنشطة تمويلية)</em></td><td class="text-end">0</td>${t.hasDataPrevious?'<td class="text-end">0</td>':""}</tr>`,C+=`<tr class="subtotal-row"><td>${s("cashFlowFromFinancing")}</td><td class="text-end">${n(0)}</td>${t.hasDataPrevious?`<td class="text-end">${n(0)}</td>`:""}</tr>`,C+=`<tr class="subtotal-row"><td>${s("netCashFlow")}</td><td class="text-end">${n(d)}</td>${t.hasDataPrevious?`<td class="text-end">${n(f)}</td>`:""}</tr>`,C+=`<tr><td>${s("beginningCash")}</td><td class="text-end">${n(u)}</td>${t.hasDataPrevious?`<td class="text-end">${n(0)}</td>`:""}</tr>`,C+=`<tr class="total-row"><td>${s("endingCash")}</td><td class="text-end">${n(p)}</td>${t.hasDataPrevious?`<td class="text-end">${n(E)}</td>`:""}</tr>`;const y=p-g;Math.abs(y)>1&&(C+=`<tr class="table-warning small"><td colspan="${t.hasDataPrevious?3:2}"><em>ملاحظة (الحالية): النقدية آخر الفترة المحسوبة (${n(p)}) تختلف عن رصيد الميزانية (${n(g)}).</em></td></tr>`),C+="</tbody></table>",document.getElementById("cashFlowStatementTable").innerHTML=C;let v=s(l>=0?"cf_comment_positive":"cf_comment_negative");t.hasDataPrevious&&(r>0&&(v+=" "+s("cf_comment_wc_use")),r<0&&(v+=" "+s("cf_comment_wc_source"))),document.getElementById("cashFlowStatementComment").textContent=v})(),(()=>{const e=t.statementsCurrent,a=t.statementsPrevious,i=e?.totals||{},o=a?.totals||{},r=e?.bs||{},l=a?.bs||{},c=o.totalEquityCapital||0,d=o.netProfit||0,u=c+("number"==typeof l.equityRetainedEarnings&&"number"==typeof d?l.equityRetainedEarnings-d:0),p=o.totalEquity||0,g=i.totalEquityCapital||0,m=i.netProfit||0,h=g+(t.hasDataPrevious?l.equityRetainedEarnings||0:r.equityRetainedEarnings-m),b=i.totalEquity||0;let x='<table class="table table-sm report-table"><thead><tr>';x+=`<th>${s("thAccount")}</th>`,x+=`<th class="text-end">${s("thCurrentPeriod")}</th>`,t.hasDataPrevious&&(x+=`<th class="text-end">${s("thPreviousPeriod")}</th>`),x+="</tr></thead><tbody>",x+=`<tr><td>${s("totalOpeningEquity")}</td><td class="text-end">${n(h)}</td>${t.hasDataPrevious?`<td class="text-end">${n(u)}</td>`:""}</tr>`,x+=`<tr><td>(+) ${s("netProfitForEquity")}</td><td class="text-end">${n(m)}</td>${t.hasDataPrevious?`<td class="text-end">${n(d)}</td>`:""}</tr>`,x+=`<tr><td>(-) ${s("dividends")}</td><td class="text-end">${n(0)}</td>${t.hasDataPrevious?'<td class="text-end">0</td>':""}</tr>`,x+=`<tr class="total-row"><td>${s("totalClosingEquity")}</td><td class="text-end">${n(b)}</td>${t.hasDataPrevious?`<td class="text-end">${n(p)}</td>`:""}</tr>`,x+="</tbody></table>",document.getElementById("equityStatementTable").innerHTML=x,document.getElementById("equityStatementComment").textContent=s(b>=h?"eq_comment_growth":"eq_comment_decline")})(),["balanceSheetCard","incomeStatementCard","cashFlowStatementCard","equityStatementCard"].forEach((t=>{const e=document.getElementById(t);e&&(e.style.display="block")})),!t.hasDataPrevious&&t.hasDataCurrent&&e&&(e.textContent=s("noPreviousDataMessage"),e.style.display="block",e.classList.remove("alert-danger"),e.classList.add("alert-info"))):(console.log("[DEBUG] Failed to load data. Showing warning."),e&&(e.textContent=s("noDataMessage"),e.style.display="block",e.classList.remove("alert-info"),e.classList.add("alert-danger"))),"function"==typeof window.applyTranslations&&(console.log("Applying translations after render attempt..."),window.applyTranslations())},c=(t,e,s)=>{let n=document.querySelector(`script[src="${t}"]`);n?"true"===n.dataset.loaded?e():"false"===n.dataset.loaded?s():(n.addEventListener("load",e),n.addEventListener("error",s)):(n=document.createElement("script"),n.src=t,n.async=!0,n.onload=()=>{n.dataset.loaded="true",e()},n.onerror=()=>{n.dataset.loaded="false",console.error(`Failed to load script: ${t}`),s()},document.head.appendChild(n))};c("https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js",(()=>{console.log("html2pdf loaded.")}),(()=>{})),c("https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js",(()=>{console.log("XLSX loaded.")}),(()=>{})),(()=>{console.log("[DEBUG] Initializing report page (Simplified)..."),console.log("[DEBUG] Bypassing library load wait. Proceeding with data loading..."),l();const e=document.getElementById("exportPdfBtn");e?e.addEventListener("click",(()=>{if(t.hasDataCurrent)if("function"==typeof html2pdf){const t=document.getElementById("report-content"),e={margin:.5,filename:"Financial_Report.pdf",image:{type:"jpeg",quality:.98},html2canvas:{scale:2,useCORS:!0,logging:!1},jsPDF:{unit:"in",format:"a4",orientation:"portrait"}};html2pdf().from(t).set(e).save()}else console.error("html2pdf library might not be loaded yet."),alert("PDF export failed. Please try again shortly.");else alert(s("noDataMessage"))})):console.warn("Export PDF button not found");const n=document.getElementById("exportExcelBtn");n?n.addEventListener("click",(()=>{if(t.hasDataCurrent)if("undefined"!=typeof XLSX)try{const t=XLSX.utils.book_new(),e=t=>{const e=[],s=[];t?.querySelectorAll("thead th").forEach((t=>s.push(t.textContent.trim()))),s.length>0&&e.push(s);const n=t?.querySelectorAll("tbody tr");return n?(n.forEach((t=>{const s=[];t.querySelectorAll("td").forEach((t=>{let e=t.textContent.trim();const n=parseFloat(e.replace(/[,()]/g,""));isNaN(n)||!e.match(/[\d,.-]+/)&&"0"!==e?s.push(e.replace(/[\(\)\-\+:%]/g,"").replace(/^[ \t]+|[ \t]+$/g,"").trim()):s.push(n)})),s.length>0&&e.push(s)})),e):e},s=(s,n)=>{const a=document.getElementById(s)?.querySelector("table");if(a){const i=e(a);if(i.length>0){const e=XLSX.utils.aoa_to_sheet(i),s=i.reduce(((t,e)=>(e.forEach(((e,s)=>{const n=e?.toString().length||5;(!t[s]||n>t[s])&&(t[s]=n)})),t)),[]).map((t=>({wch:t+2})));e["!cols"]=s,XLSX.utils.book_append_sheet(t,e,n)}else console.warn(`No data extracted from table: ${s}`)}else console.warn(`Table element not found: ${s} > table`)};s("balanceSheetTable","Balance Sheet"),s("incomeStatementTable","Income Statement"),s("cashFlowStatementTable","Cash Flow"),s("equityStatementTable","Equity"),t.SheetNames.length>0?XLSX.writeFile(t,"Financial_Statements.xlsx"):alert("No data found to export to Excel.")}catch(t){console.error("Error generating Excel file:",t),alert("Error generating Excel file.")}else console.error("XLSX library might not be loaded yet."),alert("Excel export failed. Please try again shortly.");else alert(s("noDataMessage"))})):console.warn("Export Excel button not found"),document.querySelectorAll('input[name="dataSource"]').forEach((t=>{t.addEventListener("change",l)})),"function"==typeof window.applyTranslations?(console.log("Applying initial translations..."),window.applyTranslations()):console.warn("applyTranslations function not found."),console.log("[DEBUG] Report page initialization complete.")})()}));
