const comparisonsTranslations={ar:{pageTitle:"مقارنة الفترات — المحلل المالي",pageHeader:"مقارنة الأداء المالي",pageSubheader:"قارن بين بيانات الفترة الحالية والسابقة لاكتشاف الاتجاهات والتغيرات.",exportPdf:"تصدير PDF",summaryTitle:"جدول المقارنة المفصل",chartTitleIS:"مقارنة بنود قائمة الدخل",chartTitleBS:"مقارنة بنود المركز المالي",tableHdrAccount:"البند",tableHdrChange:"التغير ($)",tableHdrChangePercent:"التغير (%)",noDataCurrent:"لا توجد بيانات للفترة الحالية. يرجى تشغيل صفحة 'التقارير' أولاً.",noDataPrevious:"لا توجد بيانات للفترة السابقة. لا يمكن إجراء مقارنة.",thPreviousPeriod:"الفترة السابقة",thCurrentPeriod:"الفترة الحالية",revenue:"الإيرادات",grossProfit:"مجمل الربح",netProfit:"صافي الربح",assets:"الأصول",liabilities:"الخصوم",equity:"حقوق الملكية"},en:{pageTitle:"Period Comparisons — Financial Analyzer",pageHeader:"Financial Performance Comparison",pageSubheader:"Compare current vs. prior period data to discover trends and changes.",exportPdf:"Export PDF",summaryTitle:"Detailed Comparison Table",chartTitleIS:"Income Statement Comparison",chartTitleBS:"Balance Sheet Comparison",tableHdrAccount:"Item",tableHdrChange:"Change ($)",tableHdrChangePercent:"Change (%)",noDataCurrent:"No data found for the current period. Please run the 'Report' page first.",noDataPrevious:"No data found for the previous period. Comparison cannot be performed.",thPreviousPeriod:"Previous Period",thCurrentPeriod:"Current Period",revenue:"Revenue",grossProfit:"Gross Profit",netProfit:"Net Profit",assets:"Assets",liabilities:"Liabilities",equity:"Equity"}};window.pageTranslations=window.pageTranslations||{},window.pageTranslations.ar={...window.pageTranslations.ar||{},...comparisonsTranslations.ar||{}},window.pageTranslations.en={...window.pageTranslations.en||{},...comparisonsTranslations.en||{}},document.addEventListener("DOMContentLoaded",(()=>{const t={statementsCurrent:null,statementsPrevious:null,hasDataCurrent:!1,hasDataPrevious:!1,charts:{}},e=localStorage.getItem("lang")||"ar",a=t=>window.pageTranslations[e]?.[t]||`[${t}]`,n={loadingContainer:document.getElementById("loadingContainer"),comparisonResults:document.getElementById("comparisonResults"),comparisonSummaryTable:document.getElementById("comparisonSummaryTable"),comparisonChartISCanvas:document.getElementById("comparisonChartIS")?.getContext("2d"),comparisonChartBSCanvas:document.getElementById("comparisonChartBS")?.getContext("2d"),exportPdfBtn:document.getElementById("exportPdfBtn")},r=(t,e=0)=>{if(!isFinite(t))return"N/A";const a=parseFloat(t.toFixed(e));return Math.abs(a)<Math.pow(10,-e)&&a<0?(0).toLocaleString("en-US",{minimumFractionDigits:e,maximumFractionDigits:e}):a.toLocaleString("en-US",{minimumFractionDigits:e,maximumFractionDigits:e})},o=()=>{const e=[],n=t.statementsCurrent.totals,r=t.statementsPrevious.totals;return[{key:"revenue",label:a("revenue"),isProfit:!0},{key:"grossProfit",label:a("grossProfit"),isProfit:!0},{key:"netProfit",label:a("netProfit"),isProfit:!0},{key:"totalAssets",label:a("assets"),isProfit:!0},{key:"totalLiabilities",label:a("liabilities"),isProfit:!1},{key:"totalEquity",label:a("equity"),isProfit:!0}].forEach((t=>{const a=n[t.key]||0,o=r[t.key]||0,s=a-o,i=((t,e)=>{if("number"!=typeof t||"number"!=typeof e)return"N/A";if(0===e)return t>0?"New":0===t?"0.0%":"N/A";const a=(t-e)/Math.abs(e);return(a>0?"+":"")+(100*a).toFixed(1)+"%"})(a,o),l=s>=0?t.isProfit?"text-success":"text-danger":t.isProfit?"text-danger":"text-success";e.push({account:t.label,val1:o,val2:a,change:s,changePercent:i,changeClass:l})})),e};(()=>{if(console.log("[DEBUG] Initializing comparisons page..."),"function"==typeof window.applyTranslations?(console.log("Applying translations..."),window.applyTranslations()):console.warn("applyTranslations function not found."),!(()=>{console.log("[DEBUG] Loading processed data for comparison...");const e=localStorage.getItem("financialDataCurrent"),a=localStorage.getItem("financialDataPrevious");if(e)try{t.statementsCurrent=JSON.parse(e),t.hasDataCurrent=!(!t.statementsCurrent||!t.statementsCurrent.totals)}catch(t){console.error("Error parsing 'financialDataCurrent':",t)}if(a)try{t.statementsPrevious=JSON.parse(a),t.hasDataPrevious=!(!t.statementsPrevious||!t.statementsPrevious.totals)}catch(t){console.error("Error parsing 'financialDataPrevious':",t)}return t.hasDataCurrent&&t.hasDataPrevious})())return t.hasDataCurrent?t.hasDataPrevious||(n.loadingContainer.textContent=a("noDataPrevious")):n.loadingContainer.textContent=a("noDataCurrent"),n.loadingContainer.style.display="block",n.loadingContainer.classList.remove("alert-warning"),void n.loadingContainer.classList.add("alert-danger");n.loadingContainer.style.display="none",n.comparisonResults.style.display="block";const e=o(),s=t.statementsPrevious.totals.periodName||a("thPreviousPeriod"),i=t.statementsCurrent.totals.periodName||a("thCurrentPeriod");((t,e,o)=>{let s=`\n            <table class="table table-sm table-bordered table-striped align-middle">\n                <thead class="table-light">\n                    <tr>\n                        <th>${a("tableHdrAccount")}</th>\n                        <th class="text-end">${e} (${a("thPreviousPeriod")})</th>\n                        <th class="text-end">${o} (${a("thCurrentPeriod")})</th>\n                        <th class="text-end">${a("tableHdrChange")}</th>\n                        <th class="text-end">${a("tableHdrChangePercent")}</th>\n                    </tr>\n                </thead>\n                <tbody>\n        `;t.forEach((t=>{s+=`\n                <tr>\n                    <td>${t.account}</td>\n                    <td class="text-end">${r(t.val1,2)}</td>\n                    <td class="text-end">${r(t.val2,2)}</td>\n                    <td class="text-end ${t.changeClass}">${r(t.change,2)}</td>\n                    <td class="text-end ${t.changeClass}">\n                        ${t.change>0?"▲":t.change<0?"▼":""} \n                        ${t.changePercent.replace("+","")}\n                    </td>\n                </tr>\n            `})),s+="</tbody></table>",n.comparisonSummaryTable.innerHTML=s})(e,s,i),((e,r,o)=>{const s=e.filter((t=>[a("revenue"),a("grossProfit"),a("netProfit")].includes(t.account))),i=s.map((t=>t.account)),l=s.map((t=>t.val1)),c=s.map((t=>t.val2));n.comparisonChartISCanvas&&(t.charts.isChart&&t.charts.isChart.destroy(),t.charts.isChart=new Chart(n.comparisonChartISCanvas,{type:"bar",data:{labels:i,datasets:[{label:r,data:l,backgroundColor:"rgba(54, 162, 235, 0.6)"},{label:o,data:c,backgroundColor:"rgba(75, 192, 192, 0.6)"}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0}}}}));const d=e.filter((t=>[a("assets"),a("liabilities"),a("equity")].includes(t.account))),u=d.map((t=>t.account)),m=d.map((t=>t.val1)),p=d.map((t=>t.val2));n.comparisonChartBSCanvas&&(t.charts.bsChart&&t.charts.bsChart.destroy(),t.charts.bsChart=new Chart(n.comparisonChartBSCanvas,{type:"bar",data:{labels:u,datasets:[{label:r,data:m,backgroundColor:"rgba(255, 159, 64, 0.6)"},{label:o,data:p,backgroundColor:"rgba(153, 102, 255, 0.6)"}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0}}}}))})(e,s,i),n.exportPdfBtn&&n.exportPdfBtn.addEventListener("click",(()=>{if(!t.hasDataCurrent)return void alert(a("noDataCurrent"));console.log("Exporting comparison to PDF...");const e=document.getElementById("comparison-content");if("function"==typeof html2pdf){const t={margin:.5,filename:"Comparison_Report.pdf",image:{type:"jpeg",quality:.98},html2canvas:{scale:2,useCORS:!0,logging:!1},jsPDF:{unit:"in",format:"a4",orientation:"portrait"}};html2pdf().from(e).set(t).save()}else console.error("html2pdf library is not loaded."),alert("PDF export failed. Library not loaded.")})),console.log("[DEBUG] Comparison page initialization complete.")})()}));
